local UIManager = (function()
    local Players = game:GetService("Players")
    local UserInputService = game:GetService("UserInputService")

    local player = Players.LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui")

    local ExploitGUIManager = {}
    ExploitGUIManager.Windows = {}

    -- Helper functions (unchanged for buttons, sliders, textbox etc.)

    local function createRoundedFrame(parent, size, position, bgColor)
        local frame = Instance.new("Frame")
        frame.Size = size
        frame.Position = position
        frame.BackgroundColor3 = bgColor
        frame.BorderSizePixel = 0
        frame.Parent = parent

        local corner = Instance.new("UICorner")
        corner.CornerRadius = UDim.new(0, 8)
        corner.Parent = frame

        return frame
    end

    -- ... (other helper functions here)

    function ExploitGUIManager.CreateWindow(title)
        title = "ðŸ”« " .. (title or "Scouse Power")

        local screenGui = Instance.new("ScreenGui")
        screenGui.Name = "ScousePowerWindow"
        screenGui.ResetOnSpawn = false
        screenGui.Parent = playerGui

        local mainFrame = createRoundedFrame(screenGui, UDim2.new(0, 400, 0, 450), UDim2.new(0.5, -200, 0.5, -225), Color3.fromRGB(20, 20, 25))

        local titleBar = createRoundedFrame(mainFrame, UDim2.new(1, 0, 0, 35), UDim2.new(0, 0, 0, 0), Color3.fromRGB(35, 35, 45))
        titleBar.ClipsDescendants = true

        local titleLabel = Instance.new("TextLabel")
        titleLabel.Size = UDim2.new(1, -64, 1, 0)
        titleLabel.Position = UDim2.new(0, 10, 0, 0)
        titleLabel.BackgroundTransparency = 1
        titleLabel.Text = title
        titleLabel.Font = Enum.Font.GothamBold
        titleLabel.TextSize = 22
        titleLabel.TextColor3 = Color3.fromRGB(220, 220, 220)
        titleLabel.TextXAlignment = Enum.TextXAlignment.Left
        titleLabel.Parent = titleBar

        -- Minimize button
        local minimizeButton = Instance.new("TextButton")
        minimizeButton.Size = UDim2.new(0, 28, 0, 28)
        minimizeButton.Position = UDim2.new(1, -64, 0, 3)
        minimizeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
        minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        minimizeButton.Font = Enum.Font.GothamBold
        minimizeButton.TextSize = 20
        minimizeButton.Text = "â€“"
        minimizeButton.BorderSizePixel = 0
        minimizeButton.Parent = titleBar

        local miniCorner = Instance.new("UICorner")
        miniCorner.CornerRadius = UDim.new(0, 5)
        miniCorner.Parent = minimizeButton

        -- Close button
        local closeButton = Instance.new("TextButton")
        closeButton.Size = UDim2.new(0, 28, 0, 28)
        closeButton.Position = UDim2.new(1, -32, 0, 3)
        closeButton.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
        closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        closeButton.Font = Enum.Font.GothamBold
        closeButton.TextSize = 20
        closeButton.Text = "X"
        closeButton.BorderSizePixel = 0
        closeButton.Parent = titleBar

        local closeCorner = Instance.new("UICorner")
        closeCorner.CornerRadius = UDim.new(0, 5)
        closeCorner.Parent = closeButton

        closeButton.MouseEnter:Connect(function()
            closeButton.BackgroundColor3 = Color3.fromRGB(255, 70, 70)
        end)
        closeButton.MouseLeave:Connect(function()
            closeButton.BackgroundColor3 = Color3.fromRGB(180, 50, 50)
        end)

        closeButton.MouseButton1Click:Connect(function()
            screenGui:Destroy()
            ExploitGUIManager.Windows[title] = nil
        end)

        local isMinimized = false
        local originalSize = mainFrame.Size
        local contentFrame

        minimizeButton.MouseButton1Click:Connect(function()
            isMinimized = not isMinimized
            if isMinimized then
                if contentFrame then contentFrame.Visible = false end
                mainFrame.Size = UDim2.new(originalSize.X.Scale, originalSize.X.Offset, 0, 40)
            else
                if contentFrame then contentFrame.Visible = true end
                mainFrame.Size = originalSize
            end
        end)

        -- Dragging logic (unchanged)
        local dragging = false
        local dragInput, dragStart, startPos

        local function update(input)
            local delta = input.Position - dragStart
            mainFrame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end

        titleBar.InputBegan:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 then
                dragging = true
                dragStart = input.Position
                startPos = mainFrame.Position

                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)

        titleBar.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement then
                dragInput = input
            end
        end)

        UserInputService.InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                update(input)
            end
        end)

        -- Content Frame
        contentFrame = Instance.new("ScrollingFrame")
        contentFrame.Size = UDim2.new(1, -20, 1, -50)
        contentFrame.Position = UDim2.new(0, 10, 0, 45)
        contentFrame.BackgroundTransparency = 1
        contentFrame.ScrollBarThickness = 6
        contentFrame.Parent = mainFrame

        local layout = Instance.new("UIListLayout")
        layout.SortOrder = Enum.SortOrder.LayoutOrder
        layout.Padding = UDim.new(0, 10)
        layout.Parent = contentFrame

        -- UI API
        local window = {
            ScreenGui = screenGui,
            MainFrame = mainFrame,
            TitleBar = titleBar,
            ContentFrame = contentFrame,

            AddButton = function(self, text, callback)
                return createButton(contentFrame, text, callback)
            end,

            AddSlider = function(self, name, min, max, default, callback)
                return createSlider(contentFrame, name, min, max, default, callback)
            end,

            AddTextbox = function(self, placeholder, callback)
                return createTextbox(contentFrame, placeholder, callback)
            end,
        }

        ExploitGUIManager.Windows[title] = window
        return window
    end

    return ExploitGUIManager
end)()

return UIManager
